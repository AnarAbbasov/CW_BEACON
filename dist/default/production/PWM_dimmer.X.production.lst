

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Jan 23 14:15:24 2022

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.44
    13                           ; Generated 14/09/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F628A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  008C                     	;# 
    74  008E                     	;# 
    75  0092                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009F                     	;# 
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  0092                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009F                     	;# 
   120  0006                     _PORTBbits	set	6
   121  0015                     _CCPR1L	set	21
   122  0012                     _T2CONbits	set	18
   123  0017                     _CCP1CON	set	23
   124  0092                     _PR2	set	146
   125  0433                     _TRISB3	set	1075
   126  0430                     _TRISB0	set	1072
   127                           
   128                           ; #config settings
   129  0000                     
   130                           	psect	cinit
   131  07FE                     start_initialization:	
   132  07FE                     __initialization:	
   133  07FE                     end_of_initialization:	
   134                           ;End of C runtime variable initialization code
   135                           
   136  07FE                     __end_of__initialization:	
   137  07FE  0183               	clrf	3
   138  07FF  2FCF               	ljmp	_main	;jump to C main() function
   139                           
   140                           	psect	cstackCOMMON
   141  0070                     __pcstackCOMMON:	
   142  0070                     ?_InitPWM:	
   143  0070                     ??_InitPWM:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  0070                     ?_generateTone:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  0070                     ??_generateTone:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  0070                     ?_SetPWMDutyCycle:	
   153                           ; 1 bytes @ 0x0
   154                           
   155  0070                     ?_main:	
   156                           ; 1 bytes @ 0x0
   157                           
   158  0070                     SetPWMDutyCycle@DutyCycle:	
   159                           ; 1 bytes @ 0x0
   160                           
   161                           
   162                           ; 2 bytes @ 0x0
   163  0070                     	ds	2
   164  0072                     ??_SetPWMDutyCycle:	
   165                           
   166                           ; 1 bytes @ 0x2
   167  0072                     	ds	2
   168  0074                     ??_main:	
   169                           
   170                           ; 1 bytes @ 0x4
   171  0074                     	ds	3
   172  0077                     main@pwmcyc:	
   173                           
   174                           ; 2 bytes @ 0x7
   175  0077                     	ds	2
   176                           
   177                           	psect	maintext
   178  07CF                     __pmaintext:	
   179 ;;
   180 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   181 ;;
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 19 in file "pwm_main.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;  pwmcyc          2    7[COMMON] int 
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : B00/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   198 ;;      Params:         0       0       0       0
   199 ;;      Locals:         2       0       0       0
   200 ;;      Temps:          3       0       0       0
   201 ;;      Totals:         5       0       0       0
   202 ;;Total ram usage:        5 bytes
   203 ;; Hardware stack levels required when called:    1
   204 ;; This function calls:
   205 ;;		_InitPWM
   206 ;;		_SetPWMDutyCycle
   207 ;;		_generateTone
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           
   214                           ;psect for function _main
   215  07CF                     _main:	
   216                           
   217                           ;pwm_main.c: 21: InitPWM();
   218                           
   219                           ;incstack = 0
   220                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   221  07CF  279E               	fcall	_InitPWM
   222                           
   223                           ;pwm_main.c: 23: int pwmcyc=0;
   224  07D0  01F7               	clrf	main@pwmcyc
   225  07D1  01F8               	clrf	main@pwmcyc+1
   226                           
   227                           ;pwm_main.c: 25: TRISB0=0;
   228  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   229  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   230  07D4  1006               	bcf	6,0	;volatile
   231                           
   232                           ;pwm_main.c: 26: generateTone();
   233  07D5  279A               	fcall	_generateTone
   234  07D6                     l577:	
   235                           ;pwm_main.c: 27: while(1)
   236                           
   237                           
   238                           ;pwm_main.c: 28: {
   239                           ;pwm_main.c: 29: SetPWMDutyCycle(pwmcyc);
   240  07D6  0878               	movf	main@pwmcyc+1,w
   241  07D7  00F1               	movwf	SetPWMDutyCycle@DutyCycle+1
   242  07D8  0877               	movf	main@pwmcyc,w
   243  07D9  00F0               	movwf	SetPWMDutyCycle@DutyCycle
   244  07DA  27AE               	fcall	_SetPWMDutyCycle
   245                           
   246                           ;pwm_main.c: 31: _delay((unsigned long)((1500)*(4000000/4000.0)));
   247  07DB  3008               	movlw	8
   248  07DC  00F6               	movwf	??_main+2
   249  07DD  309D               	movlw	157
   250  07DE  00F5               	movwf	??_main+1
   251  07DF  3005               	movlw	5
   252  07E0  00F4               	movwf	??_main
   253  07E1                     u57:	
   254  07E1  0BF4               	decfsz	??_main,f
   255  07E2  2FE1               	goto	u57
   256  07E3  0BF5               	decfsz	??_main+1,f
   257  07E4  2FE1               	goto	u57
   258  07E5  0BF6               	decfsz	??_main+2,f
   259  07E6  2FE1               	goto	u57
   260  07E7  2FE8               	nop2
   261                           
   262                           ;pwm_main.c: 32: if (pwmcyc>=0x041A){
   263  07E8  0878               	movf	main@pwmcyc+1,w
   264  07E9  3A80               	xorlw	128
   265  07EA  00FF               	movwf	127
   266  07EB  3084               	movlw	132
   267  07EC  027F               	subwf	127,w
   268  07ED  1D03               	skipz
   269  07EE  2FF1               	goto	u45
   270  07EF  301A               	movlw	26
   271  07F0  0277               	subwf	main@pwmcyc,w
   272  07F1                     u45:	
   273  07F1  1C03               	skipc
   274  07F2  2FF5               	goto	l585
   275                           
   276                           ;pwm_main.c: 33: pwmcyc=0;}
   277  07F3  01F7               	clrf	main@pwmcyc
   278  07F4  01F8               	clrf	main@pwmcyc+1
   279  07F5                     l585:	
   280                           
   281                           ;pwm_main.c: 35: pwmcyc=pwmcyc+50;
   282  07F5  0877               	movf	main@pwmcyc,w
   283  07F6  3E32               	addlw	50
   284  07F7  00F7               	movwf	main@pwmcyc
   285  07F8  0878               	movf	main@pwmcyc+1,w
   286  07F9  1803               	skipnc
   287  07FA  3E01               	addlw	1
   288  07FB  3E00               	addlw	0
   289  07FC  00F8               	movwf	main@pwmcyc+1
   290  07FD  2FD6               	goto	l577
   291  07FE                     __end_of_main:	
   292                           ;pwm_main.c: 42: }
   293                           ;pwm_main.c: 43: return;
   294                           
   295                           
   296                           	psect	text1
   297  079A                     __ptext1:	
   298 ;; *************** function _generateTone *****************
   299 ;; Defined at:
   300 ;;		line 24 in file "functions.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		None
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   314 ;;      Params:         0       0       0       0
   315 ;;      Locals:         0       0       0       0
   316 ;;      Temps:          0       0       0       0
   317 ;;      Totals:         0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels used:    1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;;		_dot
   325 ;;		_dash
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           
   330                           ;psect for function _generateTone
   331  079A                     _generateTone:	
   332                           
   333                           ;functions.c: 27: T2CONbits.TMR2ON=1;
   334                           
   335                           ;incstack = 0
   336                           ; Regs used in _generateTone: []
   337  079A  1283               	bcf	3,5	;RP0=0, select bank0
   338  079B  1303               	bcf	3,6	;RP1=0, select bank0
   339  079C  1512               	bsf	18,2	;volatile
   340  079D  0008               	return
   341  079E                     __end_of_generateTone:	
   342                           
   343                           	psect	text2
   344  07AE                     __ptext2:	
   345 ;; *************** function _SetPWMDutyCycle *****************
   346 ;; Defined at:
   347 ;;		line 33 in file "functions.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;  DutyCycle       2    0[COMMON] unsigned int 
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   361 ;;      Params:         2       0       0       0
   362 ;;      Locals:         0       0       0       0
   363 ;;      Temps:          2       0       0       0
   364 ;;      Totals:         4       0       0       0
   365 ;;Total ram usage:        4 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _SetPWMDutyCycle
   376  07AE                     _SetPWMDutyCycle:	
   377                           
   378                           ;functions.c: 36: CCPR1L=DutyCycle>>2;
   379                           
   380                           ;incstack = 0
   381                           ; Regs used in _SetPWMDutyCycle: [wreg+status,2+status,0]
   382  07AE  0871               	movf	SetPWMDutyCycle@DutyCycle+1,w
   383  07AF  00F3               	movwf	??_SetPWMDutyCycle+1
   384  07B0  0870               	movf	SetPWMDutyCycle@DutyCycle,w
   385  07B1  00F2               	movwf	??_SetPWMDutyCycle
   386  07B2  1003               	clrc
   387  07B3  0CF3               	rrf	??_SetPWMDutyCycle+1,f
   388  07B4  0CF2               	rrf	??_SetPWMDutyCycle,f
   389  07B5  1003               	clrc
   390  07B6  0CF3               	rrf	??_SetPWMDutyCycle+1,f
   391  07B7  0CF2               	rrf	??_SetPWMDutyCycle,f
   392  07B8  0872               	movf	??_SetPWMDutyCycle,w
   393  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   394  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   395  07BB  0095               	movwf	21	;volatile
   396                           
   397                           ;functions.c: 37: CCP1CON&=0xCF;
   398  07BC  30CF               	movlw	207
   399  07BD  00F2               	movwf	??_SetPWMDutyCycle
   400  07BE  0872               	movf	??_SetPWMDutyCycle,w
   401  07BF  0597               	andwf	23,f	;volatile
   402                           
   403                           ;functions.c: 38: CCP1CON|=(0x30&(DutyCycle<<4));
   404  07C0  0870               	movf	SetPWMDutyCycle@DutyCycle,w
   405  07C1  00F2               	movwf	??_SetPWMDutyCycle
   406  07C2  3003               	movlw	3
   407  07C3                     u35:	
   408  07C3  1003               	clrc
   409  07C4  0DF2               	rlf	??_SetPWMDutyCycle,f
   410  07C5  3EFF               	addlw	-1
   411  07C6  1D03               	skipz
   412  07C7  2FC3               	goto	u35
   413  07C8  1003               	clrc
   414  07C9  0D72               	rlf	??_SetPWMDutyCycle,w
   415  07CA  3930               	andlw	48
   416  07CB  00F3               	movwf	??_SetPWMDutyCycle+1
   417  07CC  0873               	movf	??_SetPWMDutyCycle+1,w
   418  07CD  0497               	iorwf	23,f	;volatile
   419  07CE  0008               	return
   420  07CF                     __end_of_SetPWMDutyCycle:	
   421                           
   422                           	psect	text3
   423  079E                     __ptext3:	
   424 ;; *************** function _InitPWM *****************
   425 ;; Defined at:
   426 ;;		line 11 in file "functions.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   440 ;;      Params:         0       0       0       0
   441 ;;      Locals:         0       0       0       0
   442 ;;      Temps:          0       0       0       0
   443 ;;      Totals:         0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           
   454                           ;psect for function _InitPWM
   455  079E                     _InitPWM:	
   456                           
   457                           ;functions.c: 14: TRISB3=0;
   458                           
   459                           ;incstack = 0
   460                           ; Regs used in _InitPWM: [wreg]
   461  079E  1683               	bsf	3,5	;RP0=1, select bank1
   462  079F  1303               	bcf	3,6	;RP1=0, select bank1
   463  07A0  1186               	bcf	6,3	;volatile
   464                           
   465                           ;functions.c: 15: CCP1CON=0x0C;
   466  07A1  300C               	movlw	12
   467  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   468  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   469  07A4  0097               	movwf	23	;volatile
   470                           
   471                           ;functions.c: 16: PR2=0x5E;
   472  07A5  305E               	movlw	94
   473  07A6  1683               	bsf	3,5	;RP0=1, select bank1
   474  07A7  1303               	bcf	3,6	;RP1=0, select bank1
   475  07A8  0092               	movwf	18	;volatile
   476                           
   477                           ;functions.c: 17: T2CONbits.T2CKPS0=1;
   478  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   479  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   480  07AB  1412               	bsf	18,0	;volatile
   481                           
   482                           ;functions.c: 18: T2CONbits.T2CKPS1=0;
   483  07AC  1092               	bcf	18,1	;volatile
   484  07AD  0008               	return
   485  07AE                     __end_of_InitPWM:	
   486  007E                     btemp	set	126	;btemp
   487  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SetPWMDutyCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     166
                                              4 COMMON     5     5      0
                            _InitPWM
                    _SetPWMDutyCycle
                       _generateTone
 ---------------------------------------------------------------------------------
 (1) _generateTone                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetPWMDutyCycle                                      4     2      2      97
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _InitPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPWM
   _SetPWMDutyCycle
   _generateTone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Jan 23 14:15:24 2022

             __CFG_CP$OFF 0000                        u35 07C3                        u45 07F1  
                      u57 07E1               __CFG_LVP$ON 0000                       l585 07F5  
                     l577 07D6                       _PR2 0092              __CFG_CPD$OFF 0000  
            __CFG_FOSC$HS 0000            ??_generateTone 0070                      _main 07CF  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 0000  
           __CFG_MCLRE$ON 0000           __end_of_InitPWM 07AE           _SetPWMDutyCycle 07AE  
                   ?_main 0070             __CFG_WDTE$OFF 0000  SetPWMDutyCycle@DutyCycle 0070  
                   status 0003                     wtemp0 007E           __initialization 07FE  
            __end_of_main 07FE                    ??_main 0074                    _CCPR1L 0015  
                  _TRISB0 0430                    _TRISB3 0433                 ??_InitPWM 0070  
 __end_of_SetPWMDutyCycle 07CF            __CFG_PWRTE$OFF 0000      __end_of_generateTone 079E  
 __end_of__initialization 07FE            __pcstackCOMMON 0070          ?_SetPWMDutyCycle 0070  
              __pmaintext 07CF                   _CCP1CON 0017                   _InitPWM 079E  
   __size_of_generateTone 0004                   __ptext1 079A                   __ptext2 07AE  
                 __ptext3 079E                 _T2CONbits 0012      end_of_initialization 07FE  
            _generateTone 079A                 _PORTBbits 0006                main@pwmcyc 0077  
     start_initialization 07FE                 ___latbits 0000                  ?_InitPWM 0070  
__size_of_SetPWMDutyCycle 0021          __size_of_InitPWM 0010         ??_SetPWMDutyCycle 0072  
           __size_of_main 002F             ?_generateTone 0070  
